import sys
import sqlite3
from PyQt5.QtWidgets import (
    QApplication, QWidget, QVBoxLayout, QHBoxLayout, QCalendarWidget,
    QPushButton, QComboBox, QTextEdit, QLabel, QMessageBox, QTableWidget,
    QTableWidgetItem
)
from PyQt5.QtCore import QDate
from qt_material import apply_stylesheet, list_themes

DB_NAME = "workouts.db"

def init_db():
    conn = sqlite3.connect(DB_NAME)
    cursor = conn.cursor()
    cursor.execute("""
        CREATE TABLE IF NOT EXISTS workouts (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            name TEXT UNIQUE
            )""")
    cursor.execute("""
        CREATE TABLE IF NOT EXISTS schedule (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            date TEXT,
            workout_id INTEGER,
            note TEXT,
            FOREIGN KEY(workout_id) REFERENCES workouts(id))""")
    conn.commit()
    conn.close()

class WorkoutApp(QWidget):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("–ö–∞–ª–µ–Ω–¥–∞—Ä –¥–ª—è —Å—Ç–∞—Ç–∏—á–Ω–∏—Ö —Ç—Ä–µ–Ω—É–≤–∞–Ω—å")
        self.setGeometry(100, 100, 400, 400)
        self.selected_schedule_id = None
        self.init_ui()
        self.load_workouts()
        self.update_table()


    def init_ui(self):
        layout = QVBoxLayout()

        self.calendar = QCalendarWidget()
        self.calendar.setGridVisible(True)
        self.calendar.selectionChanged.connect(self.update_table)
        layout.addWidget(QLabel("üìÖ –í–∏–±–µ—Ä–∏ –¥–∞—Ç—É:"))
        layout.addWidget(self.calendar)

        layout.addWidget(QLabel("üèãÔ∏è‚Äç‚ôÇÔ∏è –í–∏–±–µ—Ä–∏ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –∞–±–æ –≤–≤–µ–¥–∏ –Ω–æ–≤–µ:"))
        self.combo = QComboBox()
        self.combo.setEditable(True)
        layout.addWidget(self.combo)

        layout.addWidget(QLabel("üìù –ö–æ–º–µ–Ω—Ç–∞—Ä –¥–æ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è:"))
        self.note = QTextEdit()
        layout.addWidget(self.note)

        btn_layout = QHBoxLayout()
        self.save_btn = QPushButton("üíæ –ó–±–µ—Ä–µ–≥—Ç–∏")
        self.edit_btn = QPushButton("‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏")
        self.delete_btn = QPushButton("üóë –í–∏–¥–∞–ª–∏—Ç–∏")
        self.save_btn.clicked.connect(self.save_training)
        layout.addWidget(self.save_btn)
        layout.addWidget(self.edit_btn)
        layout.addWidget(self.delete_btn)

        layout.addLayout(btn_layout)

        self.save_btn.clicked.connect(self.save_training)
        self.edit_btn.clicked.connect(self.edit_training)
        self.delete_btn.clicked.connect(self.delete_training)

        # –¢–∞–±–ª–∏—Ü—è
        layout.addWidget(QLabel("üìã –¢—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –Ω–∞ –≤–∏–±—Ä–∞–Ω—É –¥–∞—Ç—É:"))
        self.table = QTableWidget()
        self.table.setColumnCount(3)
        self.table.setHorizontalHeaderLabels(["–ù–∞–∑–≤–∞", "–ö–æ–º–µ–Ω—Ç–∞—Ä", "ID"])
        self.table.setColumnHidden(2, True) # –ü—Ä–∏—Ö–æ–≤—É—î–º–æ ID
        self.table.cellClicked.connect(self.load_selected_row)
        layout.addWidget(self.table)

        self.setLayout(layout)


    def load_workouts(self):
        conn = sqlite3.connect(DB_NAME)
        cursor = conn.cursor()
        cursor.execute("SELECT name FROM workouts ORDER BY name")
        workouts = cursor.fetchall()
        self.combo.clear()
        for w in workouts:
            self.combo.addItem(w[0])
        conn.close()
        self.combo.setEditText("")


    def update_table(self):
        date = self.calendar.selectedDate().toString("yyyy-MM-dd")
        conn = sqlite3.connect(DB_NAME)
        cursor = conn.cursor()
        cursor.execute("""
            SELECT s.id, w.name, s.note
            FROM schedule s
            JOIN workouts w ON s.workout_id = w.id
            WHERE s.date = ?
        """, (date,))
        records = cursor.fetchall()
        conn.close()

        self.table.setRowCount(0)
        for row_num, row_data in enumerate(records):
            self.table.insertRow(row_num)
            self.table.setItem(row_num, 0, QTableWidgetItem(row_data[1])) # –ù–∞–∑–≤–∞
            self.table.setItem(row_num, 1, QTableWidgetItem(row_data[2])) # –ö–æ–º–µ–Ω—Ç–∞—Ä
            self.table.setItem(row_num, 2, QTableWidgetItem(str(row_data[0]))) # ID

        self.selected_schedule_id = None


    def save_training(self):
        # —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ –ø–æ—Ç—ñ–º —á–∏ –º–æ–∂–Ω–∞ "dd-MM-yyyy"
        date = self.calendar.selectedDate().toString("yyyy-MM-dd")
        workout_name = self.combo.currentText().strip()
        note_text = self.note.toPlainText()

        if not workout_name:
            QMessageBox.warning(self, "–ü–æ–º–∏–ª–∫–∞", "–í–≤–µ–¥–∏ –Ω–∞–∑–≤—É —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è")
            return

        conn = sqlite3.connect(DB_NAME)
        cursor = conn.cursor()

        # –î–æ–¥–∞—Ç–∏ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –≤ —Å–ø–∏—Å–æ–∫, —è–∫—â–æ –π–æ–≥–æ —â–µ –Ω–µ–º–∞—î
        cursor.execute("INSERT OR IGNORE INTO workouts(name) VALUES(?)", (workout_name,))
        conn.commit()

        # –û—Ç—Ä–∏–º–∞—Ç–∏ id —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è
        cursor.execute("SELECT id FROM workouts WHERE name=?", (workout_name,))
        workout_id = cursor.fetchone()[0]

        # –î–æ–¥–∞—Ç–∏ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –≤ —Ä–æ–∑–∫–ª–∞–¥
        cursor.execute("""
            INSERT INTO schedule(date, workout_id, note) 
            VALUES(?, ?, ?)""", (date, workout_id, note_text))
        conn.commit()
        conn.close()

        self.note.clear()
        self.combo.setEditText("")
        self.load_workouts()
        self.update_table()
        QMessageBox.information(self, "–£—Å–ø—ñ—Ö", f"–¢—Ä–µ–Ω—É–≤–∞–Ω–Ω—è '{workout_name}' –Ω–∞ {date} –∑–±–µ—Ä–µ–∂–µ–Ω–æ!")


    def load_selected_row(self, row, column):
        self.selected_schedule_id = int(self.table.item(row, 2).text())
        workout_name = self.table.item(row, 0).text()
        note = self.table.item(row, 1).text()

        self.combo.setCurrentText(workout_name)
        self.note.setText(note)


    def edit_training(self):
        if self.selected_schedule_id is None:
            QMessageBox.warning(self, "–£–≤–∞–≥–∞", "–û–±–µ—Ä—ñ—Ç—å —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è")
            return

        workout_name = self.combo.currentText().strip()
        note_text = self.note.toPlainText()

        if not workout_name:
            QMessageBox.warning(self, "–ü–æ–º–∏–ª–∫–∞", "–í–≤–µ–¥–∏ –Ω–∞–∑–≤—É —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è")
            return

        conn = sqlite3.connect(DB_NAME)
        cursor = conn.cursor()

        # –î–æ–¥–∞—Ç–∏ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –≤ —Å–ø–∏—Å–æ–∫, —è–∫—â–æ –π–æ–≥–æ —â–µ –Ω–µ–º–∞—î
        cursor.execute("INSERT OR IGNORE INTO workouts(name) VALUES(?)", (workout_name,))
        conn.commit()

        cursor.execute("SELECT id FROM workouts WHERE name = ?", (workout_name,))
        workout_id = cursor.fetchone()[0]

        cursor.execute("""
            UPDATE schedule
            SET workout_id = ?, note = ?
            WHERE id = ?
            """, (workout_id, note_text, self.selected_schedule_id))
        conn.commit()
        conn.close()

        self.note.clear()
        self.selected_schedule_id = None
        self.load_workouts()
        self.update_table()
        QMessageBox.information(self, "–û–Ω–æ–≤–ª–µ–Ω–æ", "–¢—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–æ!")


    def delete_training(self):
        if self.selected_schedule_id is None:
            QMessageBox.warning(self, "–£–≤–∞–≥–∞", "–û–±–µ—Ä—ñ—Ç—å —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è")
            return

        confirm = QMessageBox.question(self, "–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è", "–í–∏–¥–∞–ª–∏—Ç–∏ –æ–±—Ä–∞–Ω–µ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è?",
                                       QMessageBox.Yes | QMessageBox.No)
        if confirm == QMessageBox.No:
            return

        conn = sqlite3.connect(DB_NAME)
        cursor = conn.cursor()
        cursor.execute("DELETE FROM schedule WHERE id = ?", (self.selected_schedule_id,))
        conn.commit()
        conn.close()

        self.note.clear()
        self.selected_schedule_id = None
        self.update_table()
        QMessageBox.information(self, "–í–∏–¥–∞–ª–µ–Ω–æ", "–¢—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –≤–∏–¥–∞–ª–µ–Ω–æ")



if __name__ == "__main__":
    init_db()
    app = QApplication(sys.argv)
    window = WorkoutApp()
    apply_stylesheet(app, theme='dark_teal.xml')
    window.show()
    sys.exit(app.exec_())
